# 原理就是矩阵乘法，求逆矩阵
# 解出加密矩阵的逆矩阵即可(np.linalg.inv(encode_matrix))
# 还有一点就是ciphertext的精度问题，用round来进行一个四舍五入即可


import numpy as np
from Crypto.Util.number import *
from gmpy2 import *
encode_matrix = [[0.19580887, 0.71946084, 0.55210195, 0.69934394],
                 [0.19858964, 0.89382407, 0.13055549, 0.80496652],
                 [0.5564388,  0.73061506, 0.29193576, 0.86724291],
                 [0.75295568, 0.07502399, 0.28423129, 0.20924875]]

ciphertext = [[ 6916468.61845003, 11661583.13252076,  6946311.35048489, 12142029.15499917],
             [ 5776750.62815859,  8064038.88384581,  4216584.55195532,  8632077.22806296],
             [ 5907319.23835046,  8783228.04412778,  4486398.68108711,  9309059.78664739],
             [ 5741545.40989331,  8242210.29584173 , 4161004.7592931,   8781102.5668767 ],
             [ 5833619.79469137,  8283139.50060138,  4412154.8562836,   8813477.71278153],
             [ 5957045.02777812,  8259244.15969307,  4257693.80122936,  8796242.49340825],
             [ 5703734.17795068,  8137645.16383321,  4280319.3345938,   8690006.28198496],
             [ 5813957.78538094,  8305098.83550605,  4282442.877491,    8875139.72399486],
             [ 6087131.11509835,  8321911.72600999,  4439178.79055951,  8939181.83143042],
             [ 5919681.11190529,  8392285.30691995,  4311661.03862082,  8917685.99763781],
             [ 5929514.23327979,  8559802.19870826,  4506323.29208247,  9115942.65522262],
             [ 5868273.83490592,  8136102.01806198,  4333481.93521015,  8693965.02258663],
             [ 5895787.39283748,  8198360.73365633,  4231265.10875258,  8732476.8505116 ],
             [ 5522259.65232788,  7906563.96391794,  4141376.95896611,  8425407.81115909]]

inverse_matrix = np.linalg.inv(encode_matrix)
mm = np.matmul(ciphertext, inverse_matrix)
mmm = ''
for i in range(len(mm)):
    for j in range(len(mm[i])):
        mmm += str(long_to_bytes(round(mm[i][j])))[2:-1]
      
# 提取出d，可以输出mmm看看
d = int(mmm[3:-11])
c=4104306864342777642954888979823006584275176561685537444738294227954333775867823832968709207049538237603137927221683313339182622390651824529918602965890094
n=5564197628889749811670358407770739935901642265974337524394649594230437642629320020566024894777294230675303244722838464030955639294897901941066397842979967

print(long_to_bytes(powmod(c, d, n)))
